name: Release Build

on:
 workflow_dispatch:
 push:
  tags:
   - "v*"

jobs:
 release:
  permissions:
   contents: write
  strategy:
   fail-fast: false
   matrix:
    include:
     - platform: windows-latest
       args: ""

  runs-on: ${{ matrix.platform }}
  steps:
   - uses: actions/checkout@v4

   - name: Setup Bun
     uses: oven-sh/setup-bun@v1
     with:
      bun-version: latest

   - name: Install Rust stable
     uses: dtolnay/rust-toolchain@stable
     with:
      targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

   - name: Rust cache
     uses: swatinem/rust-cache@v2
     with:
      workspaces: "./src-tauri -> target"

   - name: Cache Bun dependencies
     uses: actions/cache@v4
     with:
      path: |
       ~/.bun/install/cache
       node_modules
      key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
      restore-keys: |
       ${{ runner.os }}-bun-

   - name: Install frontend dependencies
     run: bun install

   - name: Check signing secrets
     run: |
      if [ -z "${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}" ]; then
        echo "Error: TAURI_SIGNING_PRIVATE_KEY secret is not set"
        exit 1
      fi
      echo "✅ Signing key is configured"
      if [ -n "${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD }}" ]; then
        echo "✅ Signing key password is configured"
      else
        echo "ℹ️ Signing key has no password (optional)"
      fi
     shell: bash

   - uses: tauri-apps/tauri-action@v0
     env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}
      # Password is optional - empty string or omitted means no password
      TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY_PASSWORD || '' }}
     with:
      tagName: ${{ github.ref_name }}
      releaseName: "WorkspaceLauncher v__VERSION__"
      releaseBody: "See the assets below to download this version and install."
      releaseDraft: false
      prerelease: false
      args: ${{ matrix.args }}
      includeUpdaterJson: true
